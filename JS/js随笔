一.数据类型

1.基础数据类型
（1）number类型
（2）string类型
string类型之间可以使用“+”来进行拼接，string类型和int类型或者bool类型使用“+”拼接时，会先将他们转换为string类型再拼接。
获取字符串长度的方法   XX.length
（3）bool类型
（4）Undefined类型
Undefined类型的数据没有值
（5）NULL类型
NULL类型的数据有值，值为null
获取变量类型的方法：typeof XX

2.复杂数据类型
Object

3.数据类型转换
（1）转换为字符串类型
① toString()方法
var a = 18;
a.toString();
注意：Undefined和NULL类型的数据没有toString()方法，所以不能调用，这两个类型的数据想转换为字符串类型时，要使用下面的第二种方法

② String()方法
var a = 18;
String(a);

③ 字符串拼接方法
var a = 18;
a = a + "";

（2）转换为数值类型
① Number()方法
Number()可以把任意值转换成数值，如果要转换的字符串中有一个不是数值的字符，返回NaN（Not a Number）
比如：var a = '123abc'; Number(a);就会返回一个NaN，但是如果使用这个方法把bool类型转换为int类型，则true对应1，false对应0.

② parseInt()方法
注意：
parseInt()无法把bool类型转换为int类型，会返回NaN
parseInt()在转换字符串的时候，如果遇到数字就会转换数字，如果遇到非数字就会返回
比如 var a = '123abc'; parseInt(a);会返回123.
 var a = 'abc123'; parseInt(a)会返回NaN
 
 ③ parseFloat()方法
 把字符串转换成浮点数，与parseInt()类似，也不能转换bool类型的数据，不同之处在于：parseFloat()可以解析第一个小数点

④ 取正数或者取负数（可以转换bool类型）
var a = '123';
console.log(+a);

（3）转换为bool类型
使用Boolen()方法，只要一个变量有值且不为0，则转换成boolen类型时均为true。
var a = 123;
Boolen(a);

二.运算符
1.运算符优先级
优先级从高到低：
（1）()优先级最高
（2）一元运算符：++ -- !
（3）算术运算符，先* / %，后 + -
（4）关系运算符：> >= < <=
（5）相等运算符：== != === !==
（6）逻辑运算符：先&&，后||

2.三元运算符
表达式1 ? 表达式2 : 表达式3
是对if else语句的一种简化写法。
表达式1表示条件，条件为真时返回表达式2的值，条件为假时返回表达式3的值。

三.switch结构
switch只能判断表达式和值是否相等，这个相等既会判断类型，也会判断值(===)。
switch(表达式){
 case 值 :
  执行语句;
  break;
 case 值 :
  执行语句;
  break;
  ...
  default :
  执行语句;
  break;
}

三.arguments使用
arguments对象是一个函数的内置对象，存储了函数传递的所有实参，arguments是一个伪数组，可以对其进行遍历。
我们可以通过arguments获取函数调用的时候传来的实参。
比如，我要求一个任意个数数字的最大值，由于数字个数不确定，所以在定义函数的时候不能写形参：
function getMax(){
 var max = arguments[0];
 for(var i=1;i<arguments.length;i++){
  if(max < argumnents[i]){
   max = arguments[i];
  }
 }
 return max;
}

四.函数
1.匿名函数
使用方法：
（1）将匿名函数赋值给一个变量，这样就可以通过变量进行调用。
var fn = function(){
 ...
}
（2）匿名函数自调用（当函数书写完之后立即调用）
(function(){
 ...
})();

五.预解析
js的解析引擎并不会完全的从上到下把代码进行解析，而是会进行一定程度的预解析，预解析的步骤如下：
1.变量提升：把变量的声明提升到当前作用域最上面，但是不包括变量的赋值。
2.函数提升：把函数声明提升到当前作用域的最上面，不包括函数的调用。
3.在预解析的过程中，如果函数和变量的名字相同，则函数优先。
比如如下这段代码：
var a = 25;
function abc() {
 alert(a);
 var a = 10;
}
abc();
最后会输出undefined
但是，如果把函数里面的 var a = 10;改成 a = 10;则最后会输出25，因为函数里面没有了变量声明，所以在函数里面预解析的时候就不会再次声明变量。

六.对象
对象只是带有属性和方法的特殊数据类型。
对象字面量：var obj = {};

1.创建对象的方法：
（1）使用对象字面量创建对象
var person = {
 firstname:"Bill",
 lastname:"gates",
 age:56,
 eyecolor:"blue",
 speak: function(){
  console(this.firstname + 'hi');
 }
}

（2）new Object()方法
var person = new Object();
person.firstname = 'Bill';
person.lastname = 'gates';
person.age = 56;
person.eyecolor = 'blue';
person.speak = function(){
 console(this.firstname + 'hi');
}

（3）工厂方法（推荐）
function createPerson(firstname, lastname, age, eyecolor){
 var person = new Object();
 person.firstname = firstname;
 person.lastname = lastname;
 person.age = age;
 person.eyecolor = eyecolor;
}

2.访问对象的属性的方法
可以使用"."来访问对象的属性和方法，比如person.firstname  person.speak()等等。
除此之外，还可以使用"[]"访问对象的属性值（这种方法只能访问属性值），比如person['firstname']

3.遍历对象的方法
for(var key in obj){
 ...
}
