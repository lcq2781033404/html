一.js框架库
js框架库是一个封装了很多函数和兼容性代码的js文件，jquery就是一个js的框架库。

二.JQuery简介
1.JQuery中的顶级对象
$符号是JQuery中的顶级对象

2.JQuery的加载事件
JQuery中有三种加载的事件：
（1）window（页面中的所有内容（标签、图片、文字内容）加载完毕之后才触发）
$(window).load(function(){
  ... 
});

（2）document（页面中基本标签加载完毕就触发）
$(document).ready(function(){
  ...
});

（3）jQuery（和document一样，页面中基本标签加载完毕就触发）
jQuery(function(){
  ... 
});
或者
$(function(){
  ... 
});

三.jQuery和DOM对象的相互转换
1.为什么jQuery和DOM对象需要相互转换
很多时候操作DOM对象有兼容性问题，这时将DOM对象转换为jQuery对象，使用jQuery处理问题会更方便。
jQuery中的有些方法处理的可能并不是很好，或者不是我们需要的，这个时候要将jQuery对象转换为DOM对象使用原生的js代码实现功能。

2.将DOM对象转换为jQuery对象
将DOM对象放入$()中，即可将DOM对象转换为jQuery对象。比如：
var btn = document.getElementById('btn');     //变量btn就是一个DOM对象
$(btn).click(function(){
  $(this).css("backgroundColor","red");       //注意，this也是DOM对象，所以要将其用$()包裹起来
});

3.将jQuery对象转换为DOM对象
将jQuery对象转换为DOM对象有两种方式：
（1）$(btn).get(0)
（2）$(btn)[0]

四.jQuery选择器
1.jQuery获取元素的方式
（1）id选择器（获取一个）
$('#id的值')

（2）标签选择器（获取多个）
$('标签的名字')
如果想要获取指定属性值的元素，要这么写：
$('input[type=button]')

（3）类选择器（获取多个）
$('.类名')

（4）标签 + 类选择器
$('标签名.类名')
比如：$('li.cls')表示的含义是：获取应用cls样式的li标签

（5）多条件选择器
$('标签名/类名,标签名/类名,...')
获取括号内所有符合要求的元素。

（6）偶数选择器
:even
$('#uu>li:even')     //选择uu下面索引为偶数的li

（7）奇数选择器
:odd
$('#uu>li:odd')     //选择uu下面索引为奇数的li

（8）索引选择器
:eq(3)        //获取索引等于3的元素
$('#uu>li:eq(3)')
:gt(3)        //获取索引大于3的元素
$('#uu>li:gt(3)')
:lt(3)        //获取索引小于3的元素
$('#uu>li:lt(3)')

2.层次选择器
（2）后代选择器
$('#dv p')        //获取dv下面所有的p标签

（2）子代选择器
$('#dv>p')        //获取div的直属子集p标签


五.常见的几个方法
1.方法1：.html()方法
获取或设置标签中间显示其他标签及内容，类似innerHTML

2.方法2：.text()方法
获取或设置标签中间显示的文本内容（在括号中写内容表示设置，不写内容表示获取），类似innerText

3.方法3：.val()方法
获取或设置标签中value属性的值（在括号中写内容表示设置，不写内容表示获取），类似value
注意：
（1）val()方法可以获取textarea标签中间的内容，也可以使用text()方法
（2）下拉框中的val方法可以选中对应value值的元素。

4.方法4：.css()方法
设置元素的样式，类似style

5.方法5：.children()方法
获取元素的子元素

6.方法6：.index()方法
获取元素的索引值 

7.方法7：.siblings()方法
获取当前元素的所有兄弟元素（自己除外），括号内填写要获取的兄弟元素的标签名 

8.方法8：.next()方法
获取当前元素的下一个兄弟元素，无参数，返回当前元素的下一个兄弟元素

9.方法9：.nextAll()方法
获取当前元素的后面的所有兄弟元素，无参数，返回当前元素后面的所有兄弟元素

10.方法10：.prev()方法
获取当前元素的上一个兄弟元素，无参数，返回当前元素的上一个兄弟元素

11.方法11：.prevAll()方法
获取当前元素的前面的所有兄弟元素，无参数，返回当前元素前面的所有兄弟元素

12.方法12：.find()方法
针对当前的元素，找里面的其他元素，括号内填写要获取元素的标签名，也可以根据属性名来查找，如果根据属性名来查找，则填写find(:属性名)

13.方法13：.show()方法
使元素显示
show方法中可以写参数，控制元素渐变显示，参数的类型有两种：
（1）数字类型，单位为毫秒
（2）字符串类型：字符串类型的参数有三个，slow、normal、fast

14.方法14：.hide()方法
使元素隐藏
hide方法中可以写多个参数：
参数1：控制元素渐变隐藏，参数的类型有两种：
（1）数字类型，单位为毫秒
（2）字符串类型：字符串类型的参数有三个，slow、normal、fast
参数2：匿名函数，隐藏的动画播完后调用该函数。

15.方法15：.last()方法
获取当前元素的最后一个子元素

16.方法16：.width()
获取元素宽度，得到的值是数字类型

17.方法17：.height()
获取元素高度，得到的值是数字类型

18.获取和设置元素位置
获取元素的位置（数字类型）
（1）.offset().left
（2）.offset().top

设置元素的位置
.offset({'left':200,'top':100})

19.获取滚动出去的距离(数字类型)
.srollLeft()
.scrollTop()


六.样式操作
1.三种设置元素样式的方式
（1）第一种设置元素样式的代码方式:
$("ul>li").css("backgroundColor","yellow");
$("ul>li").css("fontSize","50px");
$("ul>li").css("fontFamily","全新硬笔行书简");
$("ul>li").css("color","blue");

（2）第二种设置元素样式的代码方式:链式编程
$("ul>li").css("backgroundColor","yellow").css("fontSize","50px").css("fontFamily","全新硬笔行书简").css("color","blue");

（3）第三种设置元素样式的代码方式:键值对
$("ul>li").css({"backgroundColor":"yellow","fontSize":"50px","fontFamily":"全新硬笔行书简","color":"blue"});

2.操作类样式
（1）添加类样式
$("#dv").addClass("cls cls2");      //addClass添加样式的时候.多个类样式的名字中间用空格隔开

（2）移除类样式
$("#dv").removeClass("cls");        //括号内填写移除类样式的名称
$("#dv").removeClass();             //移除div的所有的类样式,removeClass方法中什么也不写移除的是当前元素的所有的类样式

（3）hasClass()方法
此方法用于判断元素是否具有某个类样式，返回一个bool类型的值

（4）替换类样式
toggleClass()                       //对设置或移除被选元素的一个或多个类进行切换。
该方法检查每个元素中指定的类。如果不存在则添加类，如果已设置则删除之。这就是所谓的切换效果。


七.链式编程
链式编程可以将多行代码合并成一行代码，但是前提是要认清此行代码返回的是不是同一个对象，是同一个对象才能进行链式编程。否则会断链
经典案例：
        $(function () {
            $("#uu>li").mouseover(function () {
                $(this).css("backgroundColor","red").siblings("li").css("backgroundColor","");
            }).click(function () {
                $(this).css("fontSize","50px").css("color","green").css("fontFamily","全新硬笔行书简");
            });
        });

修复断链的方法：在断链开始的末尾加.end()


八.jQuery动画（这些方法的参数和show以及hide一样。）
1.显示（上面说过了，这里就不说了）
.show()        

2.隐藏（上面说过了，这里就不说了）
.hide()

3.滑入
.slideUp()

4.滑出
.slideDown()

5.切换（在滑入和滑出之间切换）
.slideToggle()

6.淡入
fadeIn()

7.淡出
fadeOut()

8.切换（在淡入和淡出之间切换）
fadeToggle()

9.渐变
fadeTo()
这个方法有两个参数：
参数1：透明度变化时间
参数2：要渐变的透明度值（0～1）

10.animate()方法
这个方法有三个参数：
参数1：键值对（数值的属性可以改，颜色不能改）（即元素的一些样式属性）
参数2：动画的时间
参数3：回调函数（指的是元素播放完动画后执行的函数）

11.stop()方法
stop方法可以用来停止动画。


九.jQuery创建和删除元素
jQuery中有两种创建元素的方式。
1.$('标签的代码')
$(#btn).click(function(){
  var aObj = $('<a href="www.baidu.com">百度</a>');        //创建元素
  $('#dv').append(aObj);                                   //创建完元素需要将其添加到div中
});

2.对象.html('标签的代码')
$('#btn').click(function(){
  $('#dv').html('<p>这是一个p标签</p>');                    //这种方法直接在div下面创建一个p标签，不需要再将p添加到div中
});
这种方法有一个问题，就是会覆盖掉div中原有的元素。

3.使用jQuery将元素添加到DOM文档流中的方法
（1）append()方法
在元素最后一个子节点的末尾追加元素

（2）prepend()方法
在元素第一个子节点前追加元素

（3）after()方法
在元素之后添加元素（添加兄弟）

（4）before()方法
在元素之前添加元素（添加兄弟）

（5）appendTo()方法
这个方法由被添加的元素调用，比如我想把一个p标签（pObj）添加到div（#dv）中：
pObj.appendTo($('#dv'));

4.删除元素
（1）.html('')
给元素的html赋值空即可清除当前元素中的所有子元素。

（2）.empty()
清空当前元素下的所有子元素

（3）.remove()
直接删除当前元素（其子元素也会被移除）。

5.元素克隆
.clone()方法，这个方法返回被克隆的元素，比如我想把div下的span克隆到另外一个div中：
var cSpan = $('#dv>span').clone();
$('#dv2').append(cSpan);
or
$('#dv>span').clone().appendTo($('#dv2'));


十.jQuery属性操作
1.设置元素属性
（1）attr()方法可以设置元素的属性，这个方法有两个参数：
参数1：属性名
参数2：属性值
如果只写了一个参数，表示获取该元素的对应属性值。

（2）prop()方法也可以设置元素的属性，参数和attr()方法一样。
prop() 和 attr() 可能返回不同的值。比如返回复选框的 "checked" 状态时的不同。


十一.jQuery事件绑定与解绑
1.绑定事件
（1）bind()（不推荐使用）
该方法可以为元素绑定事件，由要绑定事件的元素调用，这个方法有两个参数：
参数1：事件名
参数2：事件处理函数
$('#btn').bind('click',function(){});

这个方法也可以同时绑定多个事件，这些事件用{}包裹成对象：
$('#btn').bind({'click':function(){}, 'mouseover':function(){}, ...});

（2）delegate()（不推荐使用）
该方法也可以为元素绑定事件，这个方法是由要绑定事件元素的父元素调用，该方法有三个参数：
参数1：要绑定事件的元素名
参数2：事件名
参数3：事件处理函数

（3）on()（但是这个好像是比较常用的）
on方法也可以为元素绑定事件。
这个方法如果写两个参数，则参数的含义和bind一样
这个方法如果写三个参数，和delegate类似，依旧由要绑定事件元素的父元素调用，只不过参数1表示事件名，参数2表示要绑定事件的元素名，参数3表示事件处理函数

2.解绑事件
与绑定事件对应的是解绑事件，使用了哪个绑定事件的方法，就要使用对应的解绑方法：
（1）unbind(事件名)
（2）undelegate(元素名,事件名)
（3）off(事件名)
off方法有一个固定写法，表示只解绑调用该方法的元素的子集元素的对应事件，而调用该方法的元素的对应事件不解绑：off('click', '**');
off方法如果写参数，则表示调用该方法的元素及其子元素的所有事件


十二.事件触发（trigger）
事件触发即触发某个事件的时候在该事件内部调用了其他元素的某个事件方法。
举个例子，页面中有两个按钮，点击第一个按钮改变按钮自身的背景颜色，点击第二个按钮，调用第一个按钮的点击事件。则第二个按钮的点击就是事件触发

事件触发的方式：
（1）直接调用对应元素的方法
$('#btn2').click(function(){
  $('#btn1').click();
});

（2）trigger方法
参数填写要触发的事件
$('#btn2').click(function(){
  $('#btn1').trigger('click');
});

（3）triggerHandler方法
参数填写要触发的事件
$('#btn2').click(function(){
  $('#btn1').triggerHandler('click');
});

（4）三种触发事件方式的区别
前两种可以触发浏览器默认事件，最后一种不能触发浏览器默认事件


十三.事件对象
事件在触发的时候有一个对象参数，这个参数中由三个属性需要特别注意一下：
（1）e.currentTarget
真正绑定了这个事件的元素
（2）e.delegateTarget
获取调用这个事件的元素
（3）e.target
触发这个事件的元素


十四.jQuery中取消事件冒泡的方法
1.return false;


十五.each()方法
jQuery中存在隐式遍历，所以对所有元素做相同操作不需要写循环，但是做不同操作就要写循环了，可以使用each循环。
each方法中有两个参数：
参数1：要遍历的数据
参数2：遍历函数，该函数有两个参数：第一个参数是索引，第二个参数是每一个索引下对应的元素。
$.each(data,function(i, e){
  ...   
});
