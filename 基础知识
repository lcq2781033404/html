一.常见浏览器内核
1.IE浏览器：         trident内核
2.FireFox浏览器：    gecko内核
3.Opera浏览器：      以前是Presto内核，现在是Blink内核
4.Chorme：          以前是Webkit内核，现在是Blink内核
Safari：            webkit内核

二.HTML文件开头的Doctype作用是什么
<!DOCTYPE>声明叫做文件类型定义（DTD），声明的作用为了告诉浏览器该文件的类型。让浏览器解析器知道应该用哪个规范来解析文档。
<!DOCTYPE>声明必须在 HTML 文档的第一行，这并不是一个 HTML 标签。

三.渐进增强和优雅降级之间的不同
1.渐进增强
针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。

2.优雅降级
一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。

四.src和href的区别
src用于替换当前元素；href用于在当前文档和引用资源之间建立联系。
1.src 是 source 的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，
例如 js 脚本，img 图片和 frame 等元素。
<script src =”js.js”></script>
当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。
这也是为什么将js 脚本放在底部而不是头部。

2.href 是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加
<link href=”common.css” rel=”stylesheet”/>
那么浏览器会识别该文档为 css 文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式来加载 css，而不是使用@import 方式。

五.解决超链接访问后hover样式不出现的问题
原因：a:visited和a:hover的顺序放错了

a标签的四种状态排序原则：love hate原则---l(Link) ov(visited)e h(hover)a(active)te

六.rgba()和opacity()透明效果的区别
rgba()和 opacity 都能实现透明效果，但最大的不同是 opacity 作用于元素，以及元素内的
所有内容的透明度。
而 rgba()只作用于元素的颜色或其背景色。（设置 rgba 透明的元素的子元素不会继承透明
效果！）

六.css样式初始化（Normalize.css）
Normalize.css是一种CSS reset的替代方案。它在默认的HTML元素样式上提供了跨浏览器的高度一致性。相比于传统的CSS reset，Normalize.css是一种现代的、
为HTML5准备的优质替代方案（https://necolas.github.io/normalize.css/7.0.0/normalize.css）
创造normalize.css有下面这几个目的：
保护有用的浏览器默认样式而不是完全去掉它们
一般化的样式：为大部分HTML元素提供修复浏览器自身的bug并保证各浏览器的一致性
优化CSS可用性：用一些小技巧
解释代码：用注释和详细的文档来

七.严格模式（Standards）与混杂模式（Quirks）的区别
严格模式：又称标准模式，是指浏览器按照 W3C 标准解析代码。

混杂模式：又称怪异模式或兼容模式，是指浏览器用自己的方式解析代码。

如何区分：浏览器解析时到底使用严格模式还是混杂模式，与网页中的 DTD 直接相关。

1、如果文档包含严格的 DOCTYPE ，那么它一般以严格模式呈现。（严格 DTD ——严格模式） 
2、包含过渡 DTD 和 URI 的 DOCTYPE ，也以严格模式呈现，但有过渡 DTD 而没有 URI （统一资源标识符，就是声明最后的地址）会导致页面以混杂模式呈现。
（有 URI 的过渡 DTD ——严格模式；没有 URI 的过渡 DTD ——混杂模式） 
3、DOCTYPE 不存在或形式不正确会导致文档以混杂模式呈现。（DTD不存在或者格式不正确——混杂模式）
4、HTML5 没有 DTD ，因此也就没有严格模式与混杂模式的区别，HTML5 有相对宽松的语法，实现时，已经尽可能大的实现了向后兼容。（ HTML5 没有严格和混杂之分）

严格模式与混杂模式的语句解析不同点有哪些？

1）盒模型的高宽
在W3C标准中，如果设置一个元素的宽度和高度，指的是元素内容的宽度和高度，而在IE5.5及以下的浏览器及其他版本的Quirks模式下，
IE的宽度和高度还包含了padding和border。

2）设置行内元素的高宽
在Standards模式下，给span等行内元素设置wdith和height都不会生效，而在quirks模式下，则会生效。

3）设置百分比的高度
在standards模式下，一个元素的高度是由其包含的内容来决定的，如果父元素没有设置高度，子元素设置一个百分比的高度是无效的。

4）用margin:0 auto设置水平居中
使用margin:0 auto在standards模式下可以使元素水平居中，但在quirks模式下却会失效,quirk模式下的解决办法，用text-align属性:
body{text-align:center};#content{text-align:left}

八.IE的双边距 BUG：块级元素 float 后设置横向 margin，ie6 显示的 margin 比设置的较大。如何解决？
只需要给浮动元素加上display:inline;这样的CSS属性就可以了
