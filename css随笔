一.css选择器
1.基本选择器
(1)标签选择器
(2)类选择器
(3)id选择器
(4)通配符选择器
通用选择器，将匹配任何标签。不建议使用，IE有些版本不支持，大网站增加客户端负担。
效率不高，如果页面上的标签越多，效率越低，所以页面上不能出现这个选择器。
举例：
```
*{
	margin-left:0px;
	margin-top:0px;
}
```
2.复合选择器
（1）后代选择器（对所有后代均生效）
后代选择器又称为包含选择器，用来选择元素或元素组的后代，写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。
（2）子代选择器（仅对子代生效）
在外层标签和内层标签之间使用">"符号进行连接。
eg.  div > a{
	color:red;
}
（3）交集选择器
交集选择器由两个选择器构成，其中第一个必须为标签选择器，第二个必须为class或者id选择器，两个选择器之间不能有空格。交集选择器是并且的意思，
比如p.one选择的是类名为one的段落选择器。
（4）并集选择器
并集选择器使用","分割，表示对这些选择器均进行样式的修改。并集选择器多用于做css样式的初始化。

3.多类名选择器
可以给标签指定多个类名，从而达到更多的选择目的，多个类名之间使用空格隔开。

4.伪类选择器
伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果。
（1）链接伪类选择器
:link      /*未访问的链接*/ 
:visited   /*已访问的链接*/
:hover     /*鼠标移动到链接上*/
:active    /*鼠标按下还未松开的时候*/
注意：书写伪类选择器的时候，必须按照上面四个的顺序书写，即必须先写link，再依次写visited、hover、active。

5.结构（位置）伪类选择器（CSS3）
:first-child：选取属于其父元素的首个子元素的指定选择器
:last-child：选取属于其父元素的最后一个子元素的指定选择器
:nth-child(n)：选取属于其父元素的第n个子元素，括号里面写第几个，如果写n则表示所有子元素，写2n则表示2的倍数，以此类推。
括号里面填写even时，表示选取所有偶数个元素，填写odd表示选取所有奇数个元素。
:nth-last-child(n)：从最后一个子元素开始数，最后一个子元素为第一个子元素，以此类推。其余规则和:nth-child(n)伪类选择器一样

6.伪元素选择器（CSS3）
（1）E::first-letter    文本的第一个单词或字
（2）E::first-line      文本第一行
（3）E::selection       可改变选中文本的样式
（4）E::before          在E元素内部的开始位置创建一个元素，该元素为行内元素，且必须要结合content属性使用
（5）E::after	      在E元素内部的结束位置创建一个元素，该元素为行内元素，且必须要结合content属性使用
eg  
<style>
div::before{
	content:"你是";
}
div::after{
	content:"精";
}
</style>
<div>小猪</div>
最后显示的内容就是：你是小猪精

7.目标伪类选择器
:target  用于选取当前活动的目标元素。
例子：
<style>
	:target{
		color:red;
	}
</style>
<a href="#movie">演艺经历</a>
<a href="#live">个人生活</a>
<div id="movie">演艺经历</div>
<div id="live">个人生活</div>
这样写的表现效果就是点击了演艺经历链接会跳转到演艺经历这一部分的内容，同时div下的演艺经历文字变为红色。

8.属性选择器
属性选择器用中括号来表示。
E[attr]：                存在attr属性即可
E[attr=val]：            属性值等于val
E[attr^=val]：           属性值以val开头即可
E[attr$=val]：           属性值以val结尾即可
E[attr*=val]:            属性值的任意位置有val即可

二.字体连写
字体连写使用font属性，font属性用于对字体样式进行综合设置，基本语法格式如下：
选择器 {font:font-style font-weight font-size/line-height font-family;}
注意：使用font属性时，必须按上面语法格式中的顺序写，不能更换顺序，各个属性以空格隔开。
其中，不需要设置的属性可以省略（省略即代表取默认值），但必须保留font-size和font-family属性。
eg.  h1{
	font:normal 400 14px "microsoft yahei";
}

三.text-align属性：水平对齐方式
left:左对齐（默认）
right:右对齐
center:居中对齐
text-align属性设置的是盒子里面内容的水平对齐方式，而不是设置的盒子水平对齐方式

四.text-indent属性：首行缩进
eg.  p{
	text-indent:2em;   //段落首行缩进两个汉字的距离，em也是一个单位，1em就是一个字的距离，建议使用em作为单位
}

五.text-decoration属性：文本的装饰
none:默认，定义标准的文本
underline:文本下划线
overline:文本上划线
line-throgh:文本删除线

六.三种元素的显示模式
1.块级元素
块级元素通常会独自占据一整行或多整行，可以对其设置宽度、高度、对齐等属性。
常见的块级元素有<h1>~<h6> <p> <div> <ul> <ol> <li>
注意：块级元素可以包含块级元素、行内元素和行内块元素，但是h标签和p标签比较特殊（文字类块级标签），这两个标签里面不可以包含块级元素。
2.行内元素
行内元素不占有独立的区域，仅仅靠自身的字体大小和图像尺寸来支撑结构，一般不可以
设置宽度、高度、对齐等属性（但是水平方向的padding和margin可以设置，垂直方向无效）。
常见的行内元素有<a> <strong> <b> <em> <i> <del> <s> <ins> <u> <span>等。
注意：行内元素只能包含行内元素或者行内块元素，不能包含块级元素，其中a标签比较特殊，a标签里面可以放块级元素，但是a标签里面不能再放a标签。
3.行内块元素
在行内元素中有几个特殊的标签<img /> <input /> <td>，可以对它们设置宽高和对齐属性，这些元素称为行内块元素。
行内块元素的特点如下：
（1）和相邻行内元素在一行上，但是中间会有空白缝隙
（2）默认宽度就是它本身内容的宽度
（3）宽高、行高、内外边距都可以控制
4.标签显示模式的转换（使用display属性进行不同显示模式的转换）
块转行内：     display:inline;
行内转块：     display:block;
转为行内块：   display:inline-block;

七.CSS书写规范
1.空格规范
（1）.选择器与{之间必须包含空格
示例  .selector {}
（2）.属性名与之后的:之间不允许包含空格，:与属性值之间必须包含空格。
示例  font-size: 12px;

2.选择器规范
（1）.使用并集选择器时，每个选择器声明必须独占一行，示例：
.post,
.page {
	line-height: 20px;
}
（2）选择器的层级嵌套尽量不要大于三级。

3.属性规范
（1）属性定义必须另起一行，且属性定义后必须以分号结尾。

八.css三大特性
层叠、继承、优先级是CSS的三大特性。
1.css层叠性
层叠性是指多种css样式的叠加，即如果一个属性通过两个相同选择器设置到同一个元素上，这个时候一个属性就会将另一个属性层叠掉。
如果出现样式冲突，则会按照css书写的顺序，以最后的样式为准。
2.css继承性
继承性是指书写css样式表时，子标签会继承父标签的某些样式（只会继承与文本相关的样式）。
3.css优先级
定义css样式时，经常会出现两个或更多规则应用在同一元素上，这时就会出现优先级的问题，各选择器的优先级如下：
（1）继承或者*的权重：0,0,0,0
（2）标签选择器的权重：0,0,0,1
（3）（伪）类选择器的权重：0,0,1,0
（4）id选择器的权重：0,1,0,0
（5）行内样式的权重：1,0,0,0
（6）!important的权重：无穷大（比如  color:pink!important;这个权重最大）
还有一些特殊情况：
（1）继承样式的权重为0。即在嵌套结构中，不管父元素样式的权重多大，被子元素继承时，他的权重都为0。
（2）权重相同时，css遵循就近原则。
（3）权重是会叠加的，即div p{}的权重为0,0,0,2。

九.css背景
css可以添加背景颜色和背景图片，以及来进行图片设置。
1.background-color:blue                     背景颜色

2.background-image:url(image3.jpg)          背景图片地址

3.background-repeat                         是否平铺
属性值及含义：
repeat（默认）：背景横向纵向均平铺
no-repeat：不平埔
repeat-x：横向平铺
repeat-y：纵向平铺

4.background-position:x y;                   背景位置 
这个样式有两个参数，第一个参数控制背景图在水平方向的位置，第二个参数控制背景图在垂直方向的位置。
注意：
（1）两个参数的位置设置可以使用方位名词，即top,bottom,left,right,center，当使用方位名词时，两个参数可以不区分前后顺序。
（2）两个参数也可以使用具体的px值指定背景图偏移的像素，比如background-position:10px 20px;这种写法。
（3）方位名词和具体的px值可以组合使用，比如background-position:10px center;这种写法。
（4）如果只写一个参数，则另外一个参数默认居中。

5.background-attachment                      设置背景图像随对象内容滚动还是固定
这个样式有两个属性值：
scroll（默认）：背景图像随对象内容滚动
fixed：背景图像固定

6.背景简写方式
background属性值的书写顺序官方并没有强制标准，为了可读性，建议书写如下：
background:背景颜色 背景图片地址 背景平铺 背景滚动 背景位置
比如  background:blue url(image.jpg) no-repeat scroll center;

7.背景透明（CSS3）
CSS3支持背景半透明的语法格式为：
background:rgba(0,0,0,0.3);
前三个参数填写背景rgb颜色，最后一个参数是alpha透明度，取值范围在0~1之间。
注意：背景半透明指盒子背景半透明，盒子里面的内容不受影响。

十.盒子模型（CSS重点）
其实，css就三大模块：盒子模型、浮动、定位，其余的都是细节，这三部分，无论如何也要精通。
所谓盒子模型，就是把HTML页面中的元素看作是一个矩形的盒子，也就是一个盛装内容的容器。每个矩形都由元素的内容、内边距（padding）、
边框（border）和外边距（margin）组成，其实网页布局的本质就是摆盒子的过程。

1.盒子边框(border)
border-width:1px;                                                           控制边框线条的粗细
border-color:blue;                                                          控制边框线条的颜色
border-style:none(默认)|solid(实线边框)|dashed(虚线)|dotted(点线)|...         控制边框线条的类型（实线还是虚线等）
边框的样式可以连写，比如border:1px solid blue;
border:0;表示去掉对应元素的所有边框
可以对盒子的四条边分别设置不同的边框样式，使用border-top,border-bottom,border-left,border-right即可。

2.表格的细线边框
以前学过的html表格边框很粗，这里只需要css一句话就可以美观起来：
border-collapse:collapse;表示边框合并在一起

3.圆角边框（CSS3）（IE8以下不支持）
border-radius: 50%;//让一个正方形变成圆形
border-radius: 1px 1px 1px 1px;//四个角分开控制圆角大小，顺序为从左上角开始的顺时针。
border-radius: 1px 2px;//表示左上角和右下角1px，左下角和右上角2px

4.盒子阴影（CSS3）（IE8以下不支持）
语法格式：
box-shadow: 水平阴影 垂直阴影 模糊距离 阴影尺寸 阴影颜色 内/外阴影;
前两个属性是必须写的，其余的可以省略。
水平阴影：允许负值，负值时阴影在盒子左边，正值阴影在盒子右边。
垂直阴影：允许负值，负值时阴影在盒子上边。
模糊距离：值越大模糊效果越明显。
阴影尺寸：控制阴影尺寸的大小。


5.内边距(padding)
padding属性用于设置内边距，是指边框和内容之间的距离。
padding-top：上内边距
padding-right：右内边距
padding-bottom：下内边距
padding-left：左内边距

也可以使用padding连写直接设置各个边的内边距，padding后面不同个数的数值表示的含义也是不一样的：
一个值：上下左右边距均为这个值
两个值：上下边距 左右边距
三个值：上边距 左右边距 下边距
四个值：上边距 右边距 下边距 左边距

注意：padding会撑开带有width和height的盒子，所以在给盒子设置padding的值后，需要再次调整盒子的大小。所以盒子模型总宽度和总高度的计算方法是：
（1）外盒尺寸计算（元素空间尺寸）
盒子空间宽高 = 内容宽高 + padding + border + margin
（2）内盒尺寸计算（元素实际宽高）
盒子实际宽高 = 内容宽高 + padding + border

padding不会撑开盒子的情况：
（1）如果一个盒子没有指定宽度，则会和父元素的宽度一样，此时padding不会改变该盒子的大小。

6.外边距合并
使用margin定义块元素的垂直外边距时，可能会出现外边距的合并。
（1）相邻块元素垂直外边距的合并
当上下相邻的两个块元素相遇时，如果上面的元素有下外边距margin-bottom，下面的元素有上外边距margin-top，则他们之间的垂直间距不是margin-bottom与
margin-top之和，而是两者中的较大者。这种现象被称为相邻块元素垂直外边距的合并。
（2）嵌套块元素垂直外边距的合并
对于两个嵌套关系的块元素，如果父元素没有上内边距及边框，则父元素的上外边距会与子元素的上外边距发生合并，合并后的外边距为两者中的较大者，
即使父元素的上外边距为0，也会发生合并。
解决方案：
①可以为父元素定义1像素的上边框或上内边距。
②可以为父元素添加overflow:hidden;（溢出隐藏）

7.盒子模型布局稳定性
width > padding > margin

十一. 浮动
css的三种布局：标准流，浮动，定位。
1.浮动特性：
（1）浮动脱离标准流，不占位置，会影响标准流，浮动只有左右浮动。
（2）浮动的元素总是找离他最近的父元素对齐，但是不会超出内边距的范围。
（3）浮动元素的排列顺序跟上一个块级元素有关系，如果上一个元素有浮动，则该元素顶部会和上一个元素顶部对齐；
如果上一个元素是标准流，则该元素顶部会和上一个元素底部对齐。
（4）元素添加浮动后，元素会具有行内块元素的特性。
（5）特别注意：浮动的盒子需要和标准流的父元素盒子搭配使用。


十二.版心和布局流程
1.版心（可视区）
版心是指网页中主题内容所在的区域。一般在浏览器窗口中水平居中显示。

2.布局流程
为了提高网页制作的效率，布局时通常要遵守一定的布局流程，具体如下：
（1）确定网页的版心。
（2）分析页面中的行模块，以及每个行模块中的列模块。
（3）制作HTML结构。
（4）css初始化，然后开始利用盒子模型的原理，通过div+css的布局来控制网页的各个模块。


